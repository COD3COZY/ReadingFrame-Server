name: CD to AWS

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Load file in GitHub Repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ./server/src/main/resources/application.yml
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          jwt.secret-key: ${{ JWT_KEY }}
          jwt.expiration-days: ${{ JWT_EXPIRATION_DAYS }}
          jwt.issuer: ${{ JWT_ISSUER }}
          aladin.lookup-url: ${{ AL_LOOKUP_URL }}
          aladin.search-url: ${{ AL_SEARCH_URL }}
          aladin.ttbkey: ${{ AL_TTBKEY }}
          aladin.default-params.cover: ${{ AL_COVER }}
          aladin.default-params.output: ${{ AL_OUTPUT }}
          aladin.default-params.version: ${{ AL_VERSION }}
          aladin.item-id-type: ${{ AL_ITEM_ID_TYPE }}

      - name: 빌드 (테스트 제외)
        run: ./gradlew clean build --exclude-task test

      - name: 빌드한 파일 이름 저장
        run: |
          FILENAME=$(basename ./server/build/libs/*.jar)
          echo "FILENAME=$FILENAME" >> $GITHUB_ENV

      - name: SCP 방식으로 EC2에 빌드 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "./server/build/libs/${{ env.FILENAME }}"
          target: "/home/ubuntu/${{ env.FILENAME }}"

      - name: 현재 실행 중인 프로세스 종료
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "=== 기존 프로세스 종료 ==="
            sudo kill -9 $(sudo lsof -ti:8080) || echo "8080 포트를 사용하는 프로세스가 없습니다."
            sleep 2

            echo "=== 새로운 파일 실행 ==="
            sudo nohup java -jar ${{ env.FILENAME }} &

            echo "=== 전송한 파일 삭제 ==="
            rm -f ${{ env.FILENAME }}
